// <auto-generated />
using Football_Fantasy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Football_Fantasy.Migrations
{
    [DbContext(typeof(Program.Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3");

            modelBuilder.Entity("Football_Fantasy.ClientIsVerifying", b =>
                {
                    b.Property<int>("helperKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OTP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("helperEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("helperLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("helperName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("helperPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("helperUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("verifyingTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("helperKey");

                    b.ToTable("clientIsVerifying");
                });

            modelBuilder.Entity("Football_Fantasy.Player", b =>
                {
                    b.Property<int>("playerKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("element_type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("event_points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("now_cost")
                        .HasColumnType("REAL");

                    b.Property<string>("second_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("team")
                        .HasColumnType("INTEGER");

                    b.Property<string>("web_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("playerKey");

                    b.ToTable("players");
                });

            modelBuilder.Entity("Football_Fantasy.User", b =>
                {
                    b.Property<int>("userKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("money")
                        .HasColumnType("REAL");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("userKey");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Football_Fantasy.UserPlayers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("place")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("playerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("playerId");

                    b.ToTable("userPlayers");
                });

            modelBuilder.Entity("Football_Fantasy.UserPlayers", b =>
                {
                    b.HasOne("Football_Fantasy.Player", "player")
                        .WithMany()
                        .HasForeignKey("playerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("player");
                });
#pragma warning restore 612, 618
        }
    }
}
